// Code generated by go-swagger; DO NOT EDIT.

package dolar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetDolarAverageHandlerFunc turns a function with the right signature into a get dolar average handler
type GetDolarAverageHandlerFunc func(GetDolarAverageParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDolarAverageHandlerFunc) Handle(params GetDolarAverageParams) middleware.Responder {
	return fn(params)
}

// GetDolarAverageHandler interface for that can handle valid get dolar average params
type GetDolarAverageHandler interface {
	Handle(GetDolarAverageParams) middleware.Responder
}

// NewGetDolarAverage creates a new http.Handler for the get dolar average operation
func NewGetDolarAverage(ctx *middleware.Context, handler GetDolarAverageHandler) *GetDolarAverage {
	return &GetDolarAverage{Context: ctx, Handler: handler}
}

/*
	GetDolarAverage swagger:route GET /dolar/promedio Dolar getDolarAverage

Retorna el promedio del dolar paralelo
*/
type GetDolarAverage struct {
	Context *middleware.Context
	Handler GetDolarAverageHandler
}

func (o *GetDolarAverage) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetDolarAverageParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
